name: Test Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '20.x'

jobs:
  # Linting and Type Checking
  lint:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: humanGLue_brain/package-lock.json

      - name: Install dependencies
        working-directory: ./humanGLue_brain
        run: npm ci

      - name: Run ESLint
        working-directory: ./humanGLue_brain
        run: npm run lint

      - name: Run TypeScript type check
        working-directory: ./humanGLue_brain
        run: npx tsc --noEmit

  # Unit and Component Tests with Vitest
  unit-tests:
    name: Unit & Component Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: humanGLue_brain/package-lock.json

      - name: Install dependencies
        working-directory: ./humanGLue_brain
        run: npm ci

      - name: Run Vitest tests
        working-directory: ./humanGLue_brain
        run: npm run test:unit -- --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./humanGLue_brain/coverage/lcov.info
          flags: unit-tests
          name: codecov-unit
          fail_ci_if_error: false

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: |
            humanGLue_brain/coverage
            humanGLue_brain/test-results
          retention-days: 30

  # Integration Tests
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    services:
      # Mock database for testing
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: humanglue_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: humanGLue_brain/package-lock.json

      - name: Install dependencies
        working-directory: ./humanGLue_brain
        run: npm ci

      - name: Run integration tests
        working-directory: ./humanGLue_brain
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/humanglue_test
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        run: npm run test:integration

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: humanGLue_brain/test-results
          retention-days: 30

  # E2E Tests with Playwright
  e2e-tests:
    name: E2E Tests (${{ matrix.project }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, firefox, webkit]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: humanGLue_brain/package-lock.json

      - name: Install dependencies
        working-directory: ./humanGLue_brain
        run: npm ci

      - name: Install Playwright browsers
        working-directory: ./humanGLue_brain
        run: npx playwright install --with-deps ${{ matrix.project }}

      - name: Build application
        working-directory: ./humanGLue_brain
        run: npm run build

      - name: Run Playwright tests
        working-directory: ./humanGLue_brain
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        run: npx playwright test --project=${{ matrix.project }}

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.project }}
          path: humanGLue_brain/test-results/
          retention-days: 30

      - name: Upload screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-screenshots-${{ matrix.project }}
          path: humanGLue_brain/test-results/**/*.png
          retention-days: 30

  # Accessibility Tests
  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: humanGLue_brain/package-lock.json

      - name: Install dependencies
        working-directory: ./humanGLue_brain
        run: npm ci

      - name: Install Playwright
        working-directory: ./humanGLue_brain
        run: npx playwright install --with-deps chromium

      - name: Build application
        working-directory: ./humanGLue_brain
        run: npm run build

      - name: Run accessibility tests
        working-directory: ./humanGLue_brain
        run: npx playwright test --project=accessibility

      - name: Upload accessibility report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-report
          path: humanGLue_brain/test-results/
          retention-days: 30

  # Test Coverage Summary
  coverage:
    name: Test Coverage Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    if: always()
    steps:
      - name: Download coverage artifacts
        uses: actions/download-artifact@v4
        with:
          name: unit-test-results
          path: ./coverage

      - name: Display coverage summary
        run: |
          echo "## Test Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f coverage/coverage-summary.json ]; then
            cat coverage/coverage-summary.json >> $GITHUB_STEP_SUMMARY
          fi

  # Final Status Check
  test-status:
    name: Test Status Check
    runs-on: ubuntu-latest
    needs: [lint, unit-tests, integration-tests, e2e-tests, accessibility-tests]
    if: always()
    steps:
      - name: Check test results
        run: |
          if [ "${{ needs.lint.result }}" != "success" ] || \
             [ "${{ needs.unit-tests.result }}" != "success" ] || \
             [ "${{ needs.integration-tests.result }}" != "success" ] || \
             [ "${{ needs.e2e-tests.result }}" != "success" ] || \
             [ "${{ needs.accessibility-tests.result }}" != "success" ]; then
            echo "One or more test jobs failed"
            exit 1
          fi

      - name: All tests passed
        run: echo "All tests passed successfully!"
